// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectStep8.Models;

namespace ProjectStep8.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectStep8.Models.Hike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrailId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrailId");

                    b.ToTable("Hike");
                });

            modelBuilder.Entity("ProjectStep8.Models.Peak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Elevation")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NearestTown")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Peak");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            County = "El Paso",
                            Elevation = 14110,
                            Name = "Pikes Peak",
                            NearestTown = "Colorado Springs"
                        },
                        new
                        {
                            Id = 2,
                            County = "Hinsdale",
                            Elevation = 14048,
                            Name = "Handies Peak"
                        },
                        new
                        {
                            Id = 3,
                            Elevation = 14270,
                            Name = "Grays Peak"
                        },
                        new
                        {
                            Id = 4,
                            County = "Clear Creek",
                            Elevation = 14060,
                            Name = "Mt. Bierstadt"
                        },
                        new
                        {
                            Id = 5,
                            County = "Summit",
                            Elevation = 14265,
                            Name = "Quandry Peak",
                            NearestTown = "Breckenridge"
                        },
                        new
                        {
                            Id = 6,
                            Elevation = 14267,
                            Name = "Torreys Peak"
                        },
                        new
                        {
                            Id = 7,
                            Elevation = 14148,
                            Name = "Mt. Democrat"
                        },
                        new
                        {
                            Id = 8,
                            County = "Lake",
                            Elevation = 14433,
                            Name = "Mt. Elbert",
                            NearestTown = "Leadville"
                        },
                        new
                        {
                            Id = 9,
                            County = "Lake",
                            Elevation = 14421,
                            Name = "Mt. Massive",
                            NearestTown = "Leadville"
                        },
                        new
                        {
                            Id = 10,
                            County = "Chaffee",
                            Elevation = 14420,
                            Name = "Mt. Harvard",
                            NearestTown = "Buena Vista"
                        },
                        new
                        {
                            Id = 11,
                            Elevation = 14345,
                            Name = "Blanca Peak",
                            NearestTown = "Alamosa"
                        },
                        new
                        {
                            Id = 12,
                            Elevation = 14345,
                            Name = "La Plata Peak",
                            NearestTown = "Alamosa"
                        });
                });

            modelBuilder.Entity("ProjectStep8.Models.Trail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Distance")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeakId")
                        .HasColumnType("int");

                    b.Property<int>("StartingElevation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeakId");

                    b.ToTable("Trail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Distance = 12f,
                            Name = "Barr Trail",
                            PeakId = 1,
                            StartingElevation = 6650
                        },
                        new
                        {
                            Id = 2,
                            Distance = 7f,
                            Name = "Crags",
                            PeakId = 1,
                            StartingElevation = 10000
                        },
                        new
                        {
                            Id = 3,
                            Distance = 2.75f,
                            Name = "Southwest",
                            PeakId = 2,
                            StartingElevation = 11600
                        },
                        new
                        {
                            Id = 4,
                            Distance = 1.5f,
                            Name = "West",
                            PeakId = 2,
                            StartingElevation = 11300
                        },
                        new
                        {
                            Id = 5,
                            Distance = 3.4f,
                            Name = "East Ridge",
                            PeakId = 5,
                            StartingElevation = 10850
                        });
                });

            modelBuilder.Entity("ProjectStep8.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "PBanta101@GMail.Com",
                            IsAdmin = true,
                            Password = "479ed019aea4c1769a39d5ed0e79b7ca943486e2d15b937b0ff1725b2aed09b3"
                        },
                        new
                        {
                            Id = 2,
                            Email = "PBanta101@Example.Com",
                            IsAdmin = false,
                            Password = "479ed019aea4c1769a39d5ed0e79b7ca943486e2d15b937b0ff1725b2aed09b3"
                        });
                });

            modelBuilder.Entity("ProjectStep8.Models.Hike", b =>
                {
                    b.HasOne("ProjectStep8.Models.Trail", "Trail")
                        .WithMany()
                        .HasForeignKey("TrailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectStep8.Models.Trail", b =>
                {
                    b.HasOne("ProjectStep8.Models.Peak", "Peak")
                        .WithMany("Trails")
                        .HasForeignKey("PeakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
